// +build !ignore_autogenerated

// Copyright 2021 Vectorized, Inc.
//
// Use of this software is governed by the Business Source License
// included in the file licenses/BSL.md
//
// As of the Change Date specified in that file, in accordance with
// the Business Source License, use of this software will be governed
// by the Apache License, Version 2.0

// Code generated by controller-gen. DO NOT EDIT.

package config

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Config) DeepCopyInto(out *Config) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.Redpanda.DeepCopyInto(&out.Redpanda)
	in.Rpk.DeepCopyInto(&out.Rpk)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Config.
func (in *Config) DeepCopy() *Config {
	if in == nil {
		return nil
	}
	out := new(Config)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Config) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedpandaConfig) DeepCopyInto(out *RedpandaConfig) {
	*out = *in
	out.RPCServer = in.RPCServer
	if in.AdvertisedRPCAPI != nil {
		in, out := &in.AdvertisedRPCAPI, &out.AdvertisedRPCAPI
		*out = new(SocketAddress)
		**out = **in
	}
	out.KafkaApi = in.KafkaApi
	if in.AdvertisedKafkaApi != nil {
		in, out := &in.AdvertisedKafkaApi, &out.AdvertisedKafkaApi
		*out = new(SocketAddress)
		**out = **in
	}
	out.KafkaApiTLS = in.KafkaApiTLS
	out.AdminApi = in.AdminApi
	if in.SeedServers != nil {
		in, out := &in.SeedServers, &out.SeedServers
		*out = make([]SeedServer, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedpandaConfig.
func (in *RedpandaConfig) DeepCopy() *RedpandaConfig {
	if in == nil {
		return nil
	}
	out := new(RedpandaConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RpkConfig) DeepCopyInto(out *RpkConfig) {
	*out = *in
	out.TLS = in.TLS
	if in.AdditionalStartFlags != nil {
		in, out := &in.AdditionalStartFlags, &out.AdditionalStartFlags
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.SMP != nil {
		in, out := &in.SMP, &out.SMP
		*out = new(int)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RpkConfig.
func (in *RpkConfig) DeepCopy() *RpkConfig {
	if in == nil {
		return nil
	}
	out := new(RpkConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SeedServer) DeepCopyInto(out *SeedServer) {
	*out = *in
	out.Host = in.Host
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SeedServer.
func (in *SeedServer) DeepCopy() *SeedServer {
	if in == nil {
		return nil
	}
	out := new(SeedServer)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServerTLS) DeepCopyInto(out *ServerTLS) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServerTLS.
func (in *ServerTLS) DeepCopy() *ServerTLS {
	if in == nil {
		return nil
	}
	out := new(ServerTLS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SocketAddress) DeepCopyInto(out *SocketAddress) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SocketAddress.
func (in *SocketAddress) DeepCopy() *SocketAddress {
	if in == nil {
		return nil
	}
	out := new(SocketAddress)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TLS) DeepCopyInto(out *TLS) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TLS.
func (in *TLS) DeepCopy() *TLS {
	if in == nil {
		return nil
	}
	out := new(TLS)
	in.DeepCopyInto(out)
	return out
}
